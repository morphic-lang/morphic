// TODO:
// - We should get a borrowed list of owned values for the parameter of f, but we currently don't
// - Drop insertion is panicking for this file
// - Do we need the special case in `annot_rcs` for branch? What if we have `match x { Cons(_, _) -> ..., Nil -> ... }`?
// -------
// Do `iter_stack` and `iter_store` have problems? Check their usage sites
// -------
// - Remove unnessary retains/releases in the interpreter for arrays
// - Somehow in "test2.mor" we have `* Box (* Array Int) => & Box (& Array Int)`

type List {
  Cons(Array Int, List),
  Nil,
}

new(): List = Cons([1, 2, 3], Nil)

f(l: List): Int =
  match l {
    Cons(a, _) -> get(a, 0),
    Nil -> 0,
  }

proc main(): () =
  let a = new() in
  let _ = f(a) in
  do output("Completed all tests\n")
