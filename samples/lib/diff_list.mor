import Core expose { module Array }

pub type Diff {
  Diff(Array Byte -> Array Byte),
}

pub string_to_diff(string: Array Byte): Diff =
  Diff(\prefix -> Array.concat(prefix, string))

pub concat_diffs(diff1: Diff, diff2: Diff): Diff = Diff(\prefix ->
  let Diff(f1) = diff1 in
  let Diff(f2) = diff2 in
  f2(f1(prefix)))

// One day
// // Declare a custom infix operator
// infixl (+++) = concat_diffs

pub lazy(body: () -> Diff): Diff = Diff(\prefix ->
  let Diff(f) = body() in
  f(prefix) )

pub render_diff(diff: Diff): Array Byte =
  let Diff(f) = diff in
  f("")
