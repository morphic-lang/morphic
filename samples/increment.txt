id(x : a) : a =
  x

const_curry: a -> b -> a =
  \x -> \y -> x

const(x : a, y : b) : a =
  x

compose(f: a -> b, g: b -> c): (a -> c) =
  \x -> g(f(x))

iterate(func: a -> a, n: Int, base: a -> a): (a -> a) =
  if n = 0 {
    base
  } else {
    compose(func, iterate(func, n - 1, base))
  }

incr(x: Int) : Int =
  x + 1

proc main(): () =
  let incr5 = iterate(incr, 5, id) in
  let five = const(incr5(0), [1, 2, 3]) in
  let five2 = const_curry(incr5(0))(id) in
  ()
